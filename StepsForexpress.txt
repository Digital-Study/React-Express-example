React with Express JS
1)	Mkdir react-expressjs
2)	Cd react-expressjs
3)	npm init
4)	 please provide the required details and click yes
5)	npm install babel-register –save
6)	 npm install babel-polyfill –save
7)	 npm install babel-preset-es2015, babel-preset-stage-0, babel-preset-react  -- save one by one
8)	npm install babel-plugin-transform-runtime
9)	 npm install babel-plugin-transform-class-properties
10)	npm install webpack
11)	npm install webpack-dev-server
12)	npm install express –save
13)	server.js:
require('babel-register');
require('./server.babel');
14)	server.babel.js:
import express from 'express';
const app = express();
app.use('/', express.static('public'));
app.listen(process.env.PORT || 3000);
15)	If everything’s ok, you can now visit http://localhost:3000/ in browser and see “Cannot GET /” message:
16)	Public/`Index.html
<!DOCTYPE html>
	<html lang="en">
	<head>
	  <meta charset="UTF-8">
	  <title>Hello, world</title>
	</head>
	<body>
	<div id="root"></div>	
	  <script type="text/javascript" src="bundle.js" charset="utf-8"></script>
	</body>
	</html>
17)	npm install webpack --save
18)	npm install babel-loader --save
19)	npm install react --save
20)	npm install react-dom --save
21)	In src/client.js
	import React from 'react';
	import ReactDOM from 'react-dom';

	ReactDOM.render(
 		 <h1>Hello, world!</h1>,
 		 document.getElementById('root')
		);
22)	webpack.config.js in project directory
const path = require('path');
module.exports = {
    context: path.join(__dirname, 'src'),
  entry:[ 
      './client.js'
      ],
  output: {
     
    path:  path.join(__dirname, 'public'),
    filename: 'bundle.js'       
  },
  module: {
    loaders: [
      {
        test: /\.js$/,
        exclude: /node_modules/,
        loader: 'babel-loader'
      }
    ]
  },
  resolve: {
    extensions: ['.js', '.json'] 
  }
};
23)	npm install concurrently --save-dev
24)	extend “scripts” section in your package.json to look like this:
"scripts": {
	    "webpack-watch": "webpack -w",
	    "express-server": "node ./server",
	    "dev": "concurrent --kill-others \"npm run webpack-watch\" \"npm run express-server\"",
	    "test": "echo \"Error: no test specified\" && exit 1"
	  }
25)	Final package.json
{
  "name": "react-webpack-setup",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
    "scripts": {
    "webpack-watch": "webpack -w",
    "express-server": "node ./server",
    "dev": "concurrent --kill-others \"npm run webpack-watch\" \"npm run express-server\"",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "akamksha",
  "license": "MIT",
  "dependencies": {
    "babel-loader": "^7.0.0",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-polyfill": "^6.23.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-0": "^6.24.1",
    "babel-register": "^6.24.1",
    "express": "^4.15.2",
    "react": "^15.5.4",
    "react-dom": "^15.5.4",
    "webpack": "^2.4.1"
  },
  "devDependencies": {
    "concurrently": "^3.4.0"
  }
}

26)	npm run dev to start the application



